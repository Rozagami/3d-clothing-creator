// Inicjalizacja sceny
const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
const renderer = new THREE.WebGLRenderer({ antialias: true });
renderer.setSize(window.innerWidth, window.innerHeight);
renderer.shadowMap.enabled = true;
renderer.shadowMap.type = THREE.PCFSoftShadowMap;
document.body.appendChild(renderer.domElement);

// Dodanie ≈õwiat≈Ça
const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);
scene.add(ambientLight);

const directionalLight = new THREE.DirectionalLight(0xffffff, 1.5);
directionalLight.position.set(5, 5, 5);
directionalLight.castShadow = true;
scene.add(directionalLight);

// Za≈Çadowanie modelu
const loader = new THREE.GLTFLoader();
let model;

loader.load('models/model.glb', function (gltf) {
    console.log("‚úÖ Model za≈Çadowany! üéâ");
    model = gltf.scene;

    // **Ultra giga zmniejszenie modelu**
    model.scale.set(0.001, 0.001, 0.001); // Je≈õli nadal za du≈ºy, zmie≈Ñ na (0.0005, 0.0005, 0.0005)
    model.position.set(0, -0.1, 0); // Przesuwamy w d√≥≈Ç, ≈ºeby by≈Ç na ≈õrodku ekranu
    
    scene.add(model);

    // **Mocno odsuwamy kamerƒô, ≈ºeby na 100% objƒô≈Ça ca≈ÇƒÖ postaƒá**
    camera.position.set(0, 0, 10); // Kamerƒô ustawiamy DALEKO, ≈ºeby model by≈Ç ca≈Çy widoczny
    camera.lookAt(0, 0, 0); // Kierujemy kamerƒô na model

    animate();
}, undefined, function (error) {
    console.error("‚ùå B≈ÇƒÖd ≈Çadowania modelu:", error);
});

// Obracanie modelem myszkƒÖ
let isDragging = false;
let previousMouseX = 0;

document.addEventListener("mousedown", (event) => {
    isDragging = true;
    previousMouseX = event.clientX;
});

document.addEventListener("mousemove", (event) => {
    if (isDragging && model) {
        let deltaX = event.clientX - previousMouseX;
        model.rotation.y += deltaX * 0.005;
        previousMouseX = event.clientX;
    }
});

document.addEventListener("mouseup", () => {
    isDragging = false;
});

// Animacja
function animate() {
    requestAnimationFrame(animate);
    if (model) {
        model.rotation.y += 0.001; // Wolniejszy obr√≥t
    }
    renderer.render(scene, camera);
}

animate();
